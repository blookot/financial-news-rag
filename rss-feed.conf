# Ingesting RSS 2.0 XML feeds in Elasticsearch

input {
  rss {
    url => "https://www.lefigaro.fr/rss/figaro_bourse.xml"
    # sync every 10mn
    interval => 600
    tags => ["Le Figaro"]
  }
  rss {
    url => "https://www.bing.com/news/search?q=actualite%22financiere&qft=sortbydate%3d%221%22+interval%3d%227%22&form=YFNR&format=rss&cc=fr"
    interval => 600
    tags => ["Bing"]
  }
  rss {
    url => "https://cryptotribune.fr/rss/latest-posts"
    interval => 600
    tags => ["Crypto Tribune"]
  }
  rss {
    url => "https://flipboard.com/topic/fr-bourse.rss"
    interval => 600
    tags => ["Flipboard"]
  }
  rss {
    url => "https://www.bfmtv.com/rss/economie/economie-social/finances-publiques/"
    interval => 600
    tags => ["BFM"]
  }
  rss {
    url => "https://www.latribune.fr/rss/rubriques/vos-finances.html"
    interval => 600
    tags => ["La Tribune"]
  }
  rss {
    url => "https://www.lemonde.fr/bourse/rss_full.xml"
    interval => 600
    tags => ["Le Monde"]
  }
  rss {
    url => "https://www.cfnews.net/rss/feed/bourse"
    interval => 600
    tags => ["CF News"]
  }
  rss {
    url => "https://www.valeursactuelles.com/feed?post_type=post&taxonomy_name=bourse"
    interval => 600
    tags => ["Valeurs Actuelles"]
  }
  rss {
    url => "https://feeds.360.audion.fm/3xQ7hPfUsjcTYExBtd10U"
    interval => 600
    tags => ["Boursorama"]
  }
  rss {
    url => "https://feeds.audiomeans.fr/feed/0a5d40f2-7ce9-4d45-8d62-b559765460e8.xml"
    interval => 600
    tags => ["Zone Bourse"]
  }
}

filter {
  # Set the timestamp for the event
  if [published] {
    # field already in ISO format, just copy it
    ruby {
      code => "event.set('@timestamp', event.get('published'))"
    }
  }
  # Delete [event][original] (copied in the message field)
  mutate {
    remove_field => ["[event]"]
  }
  # Compute a hash that will be used for deduplication of articles (see https://www.elastic.co/blog/logstash-lessons-handling-duplicates)
  fingerprint {
    source => "message"
    target => "[@metadata][fingerprint]"
    method => "MURMUR3"
  }
}

output {
  elasticsearch {
    hosts => [ "${ES_HOST}" ]
    user => "${ES_USER}"
    password => "${ES_PASSWORD}"
    index => "financial-news-semantic"
    # hash is the unique id of the document
    document_id => "%{[@metadata][fingerprint]}"
  }  
}